//Generated by wsdl2apex-plus

public class ${schema.name} {

    #foreach($type in $schema.complexTypes)

    public class ${type.name} {
        #foreach($element in $type.elements)public #if($schema.isSimpleType($element.type))${schema.getPrimitiveApexType($schema.getSimpleType($element.type).base)}#else$schema.getApexType($element, true)#end#if($element.multiOccurring)[]#end ${element.name}#if(!($schema.isSimpleType($element.type)));#else{
            #set($simpleType = $schema.getSimpleType($element.type))get;
            set {
                #if($simpleType.enumerated)Set<String> enumerations = new Set<String>{#foreach($enum in $simpleType.enumerations)'${enum}'#if($foreach.hasNext),#end#end};
                if (!enumerations.contains(value)) {
                    throw new SchemaValidationException('"' + value + '" is not a valid value for "${simpleType.name}"');
                }
            #end
            #if($simpleType.minLengthRestricted)

                if (value.length() < $simpleType.minLength) {
                    throw new SchemaValidationException('"' + value + '" is too short for "${simpleType.name}". The minimum length is ${simpleType.minLength}');
                }
            #end
            #if($simpleType.maxLengthRestricted)

                if (value.length() > $simpleType.maxLength) {
                    throw new SchemaValidationException('"' + value + '" is too long for "${simpleType.name}". The maximum length is ${simpleType.maxLength}');
                }#end

                ${element.name} = value;
            }
        }
        #end

        #end

        #foreach($element in $type.elements)private String[] ${element.name}_type_info = new String[] {'${element.name}','${element.elementNamespace}','#if($schema.isSimpleType($element.type))${schema.getPrimitiveApexType($schema.getSimpleType($element.type).base)}#else$schema.getApexType($element, false)#end','${element.minOccurs}','${element.maxOccurs}','${element.required}'};
        #end

        private String[] apex_schema_type_info = new String[] {'${type.namespace}','true','false'};
        private String[] field_order_type_info = new String[] {#foreach($element in $type.elements)'${element.name}'#if($foreach.hasNext),#end#end};

        public ${type.name}() {
        }

        public ${type.name}(DOM.XmlNode responseNode) {
        }

        public void populateXmlNode(Dom.XmlNode outerNode) {
        }
    }
#end}